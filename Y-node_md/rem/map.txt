map底层使用哈希表来实现，底层实现是 数组+链表
主要包含hmap和bmap两个底层结构
hmap是最外层的一个数据结构，只要记录保存的元素的个数，计算哈希值，存储bmap数组的地址，还有扩容因子等等这些，
bmap就是桶单元，数据的存储就是在单元里面，然后每一个单元能够存储8个键值，然后这些键值是以排列的方式存储，比如kkkvvv这样，如果超过桶的长度，扩容的桶单元会组成链表的结构存储，就是两个桶连接在一次嘛。
当我们存储键值时，hmap会通过key来计算它的哈希值，然后将这个哈希值一分为二，地位哈希值主要是为了找桶数组，高位哈希值主要是为了找桶单元，然后将就将键值存储到指定的桶单元；

它的创建使用make来创建，如果存储的元素个数超过了桶个数的6.5倍，他就会触发扩容机制，扩容有等量扩容和翻倍扩容，因为2的B次方就是桶的个数嘛，如果这个B<=15的话就会出发等量扩容，>15的话就会出发翻倍扩容。